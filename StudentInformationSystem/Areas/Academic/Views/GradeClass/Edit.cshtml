@model StudentInformationSystem.Areas.Academic.Models.GradeClassVM

@{
    ViewBag.Title = "Edit Grade Class";
}

@using (Html.BeginForm())
{

    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(model => model.GradeId)
    @Html.HiddenFor(x => x.RowVersion)
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <p>
            <input type="submit" value="Save" class="btn btn-primary" style="min-width:75px" />
        </p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.GradeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GradeName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumEditorFor(model => model.Name, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Medium, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumEditorFor(model => model.Medium, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Medium, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaxStudentCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MaxStudentCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxStudentCount, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<div class="ChildContent">
    @{ Html.RenderAction("SubjectIndex", new { id = Model.Id, isToEdit = true }); }
</div>

<br />
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/academic/gradeclass")
}

