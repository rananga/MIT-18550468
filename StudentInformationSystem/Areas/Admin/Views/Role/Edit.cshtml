@model StudentInformationSystem.Areas.Admin.Models.RoleVM

@{
    ViewBag.Title = "Edit Role";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <p>
            <input id="btnSave" type="submit" value="Save" class="btn btn-primary" style="min-width:75px" />
        </p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RoleId)
        @Html.HiddenFor(model => model.RowVersion)
        @Html.HiddenFor(model => model.MenusJson)
        @Html.HiddenFor(model => model.GradesJson)

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="ChildContent col-md-6">
        @{ Html.RenderAction("ChildIndex", new { id = Model.RoleId, isToEdit = true }); }
    </div>
    <div class="ChildContent col-md-6">
        @{ Html.RenderAction("GradeIndex", new { id = Model.RoleId, isToEdit = true }); }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/admin/role")
}