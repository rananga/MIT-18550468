@using StudentInformationSystem.Data.Models;
@model StudentInformationSystem.Areas.Admin.Models.GradeHeadVM

@{
    ViewBag.Title = "Create Grade Head";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    <p>
        <input type="submit" value="Save" class="btn btn-primary" style="min-width:75px" />
    </p>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GradeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.SelectListFor(model => model.GradeId, (Grade x) => x.Id, (Grade x) => x.GradeNo.ToEnumChar(), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GradeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StaffId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.PopUpSelectorFor(model => model.StaffId, "Base", "Data", "GetStaffMembers", new { @class = "form-control" }, "Please select a Staff Member", dspFormat: "{1}", hiddenIndices: "0")
            @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control form-control-sm", type = "JQ-date" } })
            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control form-control-sm", type = "JQ-date" } })
            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
}

<br />
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
