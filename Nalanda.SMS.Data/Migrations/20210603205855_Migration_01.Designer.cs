// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nalanda.SMS.Data;

namespace Nalanda.SMS.Data.Migrations
{
    [DbContext(typeof(dbNalandaContext))]
    [Migration("20210603205855_Migration_01")]
    partial class Migration_01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClassID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassStudent", b =>
                {
                    b.Property<int>("ClStudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClStudID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCurrentMonitor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMonitor")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PeriodEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PeriodStartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PrClId")
                        .HasColumnName("PrClID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudId")
                        .HasColumnName("StudID")
                        .HasColumnType("int");

                    b.HasKey("ClStudId");

                    b.HasIndex("PrClId")
                        .HasName("IX_FK_PromotionClassClassStudent");

                    b.HasIndex("StudId")
                        .HasName("IX_FK_StudentClassStudent");

                    b.ToTable("ClassStudents");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassTeacher", b =>
                {
                    b.Property<int>("ClTeachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClTeachID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnName("ClassID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PeriodEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PeriodId")
                        .HasColumnName("PeriodID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PeriodStartDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TeacherId")
                        .HasColumnName("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("ClTeachId");

                    b.HasIndex("ClassId")
                        .HasName("IX_FK_ClassClassTeacher");

                    b.HasIndex("PeriodId")
                        .HasName("IX_FK_PeriodSetupClassTeacher");

                    b.HasIndex("TeacherId")
                        .HasName("IX_FK_TeacherClassTeacher");

                    b.ToTable("ClassTeachers");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Club", b =>
                {
                    b.Property<int>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Cid");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClubMember", b =>
                {
                    b.Property<int>("Cmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CMID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cid")
                        .HasColumnName("CID")
                        .HasColumnType("int");

                    b.Property<int>("CommiteeMemberType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("MemberDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MembershipType")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnName("StudentID")
                        .HasColumnType("int");

                    b.HasKey("Cmid");

                    b.HasIndex("Cid")
                        .HasName("IX_FK_ClubClubMember");

                    b.HasIndex("StudentId")
                        .HasName("IX_FK_StudentClubMember");

                    b.ToTable("ClubMembers");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.EventParticipation", b =>
                {
                    b.Property<int>("Epid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EPID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("EventDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsWinner")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudId")
                        .HasColumnName("StudID")
                        .HasColumnType("int");

                    b.Property<int>("TeacherInCharge")
                        .HasColumnType("int");

                    b.Property<string>("WinningDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Epid");

                    b.HasIndex("StudId")
                        .HasName("IX_FK_StudentEventParticipation");

                    b.HasIndex("TeacherInCharge")
                        .HasName("IX_FK_TeacherEventParticipation");

                    b.ToTable("EventParticipations");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.LeavingCertificate", b =>
                {
                    b.Property<int>("LeavCertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LeavCertID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Conduct")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateLeaving")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudId")
                        .HasColumnName("StudID")
                        .HasColumnType("int");

                    b.HasKey("LeavCertId");

                    b.HasIndex("StudId")
                        .HasName("IX_FK_StudentLeavingCertificate");

                    b.ToTable("LeavingCertificates");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MenuID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplaySeq")
                        .HasColumnType("int");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnName("ParentMenuID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.HasIndex("ParentMenuId")
                        .HasName("IX_FK_MenuMenu");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            DisplaySeq = 10,
                            Text = "Admin",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 2,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Users",
                            DisplaySeq = 10,
                            ParentMenuId = 1,
                            Text = "User Role Maintenance",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 3,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "UserRoles",
                            DisplaySeq = 20,
                            ParentMenuId = 1,
                            Text = "User Maintenance",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 4,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Teacher",
                            DisplaySeq = 30,
                            ParentMenuId = 1,
                            Text = "Teacher Maintenance",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 5,
                            DisplaySeq = 40,
                            ParentMenuId = 1,
                            Text = "-",
                            Type = "D"
                        },
                        new
                        {
                            MenuId = 6,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Class",
                            DisplaySeq = 50,
                            ParentMenuId = 1,
                            Text = "Class Definition",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 7,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Club",
                            DisplaySeq = 60,
                            ParentMenuId = 1,
                            Text = "Club Definition",
                            Type = "I"
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.PeriodSetup", b =>
                {
                    b.Property<int>("PeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PeriodID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsPeriodComplete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PeriodEndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PeriodStartDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("PeriodId");

                    b.ToTable("PeriodSetups");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Prefect", b =>
                {
                    b.Property<int>("PreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PreID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InactiveReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDhp")
                        .HasColumnName("IsDHP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHp")
                        .HasColumnName("IsHP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPromoted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PrefClassId")
                        .HasColumnName("PrefClassID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PromotedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Responsibilty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudId")
                        .HasColumnName("StudID")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("PreId");

                    b.HasIndex("PrefClassId")
                        .HasName("IX_FK_PromotionClassPrefect");

                    b.HasIndex("StudId")
                        .HasName("IX_FK_StudentPrefect");

                    b.ToTable("Prefects");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.PromotionClass", b =>
                {
                    b.Property<int>("PrClId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PrClID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnName("ClassID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MonitorStud2Id")
                        .HasColumnName("MonitorStud2ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonitorStudId")
                        .IsRequired()
                        .HasColumnName("MonitorStudID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodId")
                        .HasColumnName("PeriodID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TeacherId")
                        .HasColumnName("TeacherID")
                        .HasColumnType("int");

                    b.HasKey("PrClId");

                    b.HasIndex("ClassId")
                        .HasName("IX_FK_ClassPromotionClass");

                    b.HasIndex("PeriodId")
                        .HasName("IX_FK_PeriodSetupPromotionClass");

                    b.HasIndex("TeacherId")
                        .HasName("IX_FK_TeacherPromotionClass");

                    b.ToTable("PromotionClasses");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Code = "Admin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Administrator"
                        },
                        new
                        {
                            RoleId = 2,
                            Code = "AdminUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin Department User"
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.RoleMenuAccess", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnName("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "RoleId");

                    b.HasIndex("RoleId")
                        .HasName("IX_FK_RoleMenuAccesses_Roles");

                    b.ToTable("RoleMenuAccesses");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.RoleTile", b =>
                {
                    b.Property<int>("RoleTileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleTileID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TileId")
                        .HasColumnName("TileID")
                        .HasColumnType("int");

                    b.HasKey("RoleTileId");

                    b.HasIndex("RoleId")
                        .HasName("IX_FK_RoleRoleTiles");

                    b.ToTable("RoleTiles");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudFamily", b =>
                {
                    b.Property<int>("StudFid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudFID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactHome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nicno")
                        .IsRequired()
                        .HasColumnName("NICNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudId")
                        .HasColumnName("StudID")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<string>("WorkingAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudFid");

                    b.HasIndex("StudId")
                        .HasName("IX_FK_StudentStudFamily");

                    b.ToTable("StudFamilies");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudSibling", b =>
                {
                    b.Property<int>("SubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SubID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SiblingStudId")
                        .HasColumnName("SiblingStudID")
                        .HasColumnType("int");

                    b.Property<int>("SudId")
                        .HasColumnName("SudID")
                        .HasColumnType("int");

                    b.HasKey("SubId");

                    b.HasIndex("SiblingStudId")
                        .HasName("IX_FK_StudentStudSibling1");

                    b.HasIndex("SudId")
                        .HasName("IX_FK_StudentStudSibling");

                    b.ToTable("StudSiblings");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Student", b =>
                {
                    b.Property<int>("StudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("EmergencyConName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EngReading")
                        .HasColumnType("int");

                    b.Property<int>("EngSpeaking")
                        .HasColumnType("int");

                    b.Property<int>("EngWriting")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InactiveReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndexNo")
                        .HasColumnType("int");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLeavingIssued")
                        .HasColumnType("bit");

                    b.Property<string>("LastDhammaGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastDhammaSchool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LdhammaSchoolAdd")
                        .HasColumnName("LDhammaSchoolAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnName("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialAttention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("StudId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Teacher", b =>
                {
                    b.Property<int>("TeachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TeachID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImmeContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmeContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InactiveReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnName("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nicno")
                        .IsRequired()
                        .HasColumnName("NICNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("TeachId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "1",
                            Status = 1,
                            UserName = "rananga"
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId")
                        .HasName("IX_FK_RoleUserRole");

                    b.HasIndex("UserId")
                        .HasName("IX_FK_UserUserRole");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassStudent", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.PromotionClass", "PromotionClass")
                        .WithMany("ClassStudents")
                        .HasForeignKey("PrClId")
                        .HasConstraintName("FK_PromotionClassClassStudent")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("ClassStudents")
                        .HasForeignKey("StudId")
                        .HasConstraintName("FK_StudentClassStudent")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassTeacher", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Class", "Class")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_ClassClassTeacher")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.PeriodSetup", "Period")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("PeriodId")
                        .HasConstraintName("FK_PeriodSetupClassTeacher")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Teacher", "Teacher")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_TeacherClassTeacher")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClubMember", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Club", "Club")
                        .WithMany("ClubMembers")
                        .HasForeignKey("Cid")
                        .HasConstraintName("FK_ClubClubMember")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("ClubMembers")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_StudentClubMember")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.EventParticipation", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("EventParticipations")
                        .HasForeignKey("StudId")
                        .HasConstraintName("FK_StudentEventParticipation")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Teacher", "Teacher")
                        .WithMany("EventParticipations")
                        .HasForeignKey("TeacherInCharge")
                        .HasConstraintName("FK_TeacherEventParticipation")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.LeavingCertificate", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("LeavingCertificates")
                        .HasForeignKey("StudId")
                        .HasConstraintName("FK_StudentLeavingCertificate")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Menu", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Menu", "ParentMenu")
                        .WithMany("InverseParentMenu")
                        .HasForeignKey("ParentMenuId")
                        .HasConstraintName("FK_MenuMenu");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Prefect", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.PromotionClass", "PromotionClass")
                        .WithMany("Prefects")
                        .HasForeignKey("PrefClassId")
                        .HasConstraintName("FK_PromotionClassPrefect")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("Prefects")
                        .HasForeignKey("StudId")
                        .HasConstraintName("FK_StudentPrefect")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.PromotionClass", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Class", "Class")
                        .WithMany("PromotionClasses")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_ClassPromotionClass")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.PeriodSetup", "PeriodSetup")
                        .WithMany("PromotionClasses")
                        .HasForeignKey("PeriodId")
                        .HasConstraintName("FK_PeriodSetupPromotionClass")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Teacher", "Teacher")
                        .WithMany("PromotionClasses")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_TeacherPromotionClass")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.RoleMenuAccess", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Menu", "Menu")
                        .WithMany("RoleMenuAccesses")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_RoleMenuAccesses_Menus")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Role", "Role")
                        .WithMany("RoleMenuAccesses")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RoleMenuAccesses_Roles")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.RoleTile", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Role", "Role")
                        .WithMany("RoleTiles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RoleRoleTiles")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudFamily", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Stud")
                        .WithMany("StudFamilies")
                        .HasForeignKey("StudId")
                        .HasConstraintName("FK_StudentStudFamily")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudSibling", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Student", "StudentRelation")
                        .WithMany("StudSiblings")
                        .HasForeignKey("SudId")
                        .HasConstraintName("FK_StudentStudSibling")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.UserRole", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RoleUserRole")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserUserRole")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
