// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nalanda.SMS.Data;

namespace Nalanda.SMS.Data.Migrations
{
    [DbContext(typeof(dbNalandaContext))]
    partial class dbNalandaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeClassId")
                        .HasColumnType("int");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeClassId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassMonitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("ClassMonitors");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("ClassStudents");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassStudentSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassStudentId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassStudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ClassStudentSubjects");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TeacherSubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("TeacherSubjectId");

                    b.ToTable("ClassSubjects");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StaffId");

                    b.ToTable("ClassTeachers");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ExtraActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExtraActivities");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ExtraActivityAcheivement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ExtraActivityAcheivements");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ExtraActivityPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ExtraActivityPositions");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 1,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 2,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 3,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 4,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 5,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 6,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 7,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 8,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 10,
                            SectionId = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 11,
                            SectionId = 0
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.GradeClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("GradeClasses");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.GradeHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("StaffId");

                    b.ToTable("GradeHeads");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.LeavingCertificate", b =>
                {
                    b.Property<int>("LeavCertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LeavCertID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Conduct")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateLeaving")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudId")
                        .HasColumnName("StudID")
                        .HasColumnType("int");

                    b.HasKey("LeavCertId");

                    b.HasIndex("StudId")
                        .HasName("IX_FK_StudentLeavingCertificate");

                    b.ToTable("LeavingCertificates");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MenuID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplaySeq")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnName("ParentMenuID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.HasIndex("ParentMenuId")
                        .HasName("IX_FK_MenuMenu");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            DisplaySeq = 10,
                            Icon = "fas fa-user-tie",
                            IsHidden = false,
                            Text = "Admin",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 2,
                            DisplaySeq = 20,
                            Icon = "fas fa-book-reader",
                            IsHidden = false,
                            Text = "Academic",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 3,
                            DisplaySeq = 30,
                            Icon = "fas fa-chalkboard-teacher",
                            IsHidden = false,
                            Text = "Teacher",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 4,
                            DisplaySeq = 40,
                            Icon = "fas fa-user-graduate",
                            IsHidden = false,
                            Text = "Student",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 5,
                            DisplaySeq = 50,
                            Icon = "fas fa-chart-bar",
                            IsHidden = false,
                            Text = "Report",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 6,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "UserRoles",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "User Permissions",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 7,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Users",
                            DisplaySeq = 20,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Users",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 8,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "StaffMember",
                            DisplaySeq = 30,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Staff Members",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 9,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Section",
                            DisplaySeq = 40,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Sections",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 10,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Grade",
                            DisplaySeq = 50,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Grades",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 11,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "GradeClass",
                            DisplaySeq = 60,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Grade Classes",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 12,
                            Action = "Index",
                            Area = "Academic",
                            Controller = "SectionHead",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 2,
                            Text = "Section Heads",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 13,
                            Action = "Index",
                            Area = "Academic",
                            Controller = "GradeHead",
                            DisplaySeq = 20,
                            IsHidden = false,
                            ParentMenuId = 2,
                            Text = "Grade Heads",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 14,
                            Action = "Index",
                            Area = "Academic",
                            Controller = "Class",
                            DisplaySeq = 30,
                            IsHidden = false,
                            ParentMenuId = 2,
                            Text = "Classes",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 15,
                            Action = "Index",
                            Area = "Teacher",
                            Controller = "Teacher",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 3,
                            Text = "Teacher Maintenance",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 16,
                            Action = "Index",
                            Area = "Student",
                            Controller = "Student",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 4,
                            Text = "Student Maintenance",
                            Type = "I"
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Code = "Admin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Administrator"
                        },
                        new
                        {
                            RoleId = 2,
                            Code = "AdminUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin Department User"
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.RoleMenuAccess", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnName("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "RoleId");

                    b.HasIndex("RoleId")
                        .HasName("IX_FK_RoleMenuAccesses_Roles");

                    b.ToTable("RoleMenuAccesses");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.SectionHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StaffMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("StaffMemberId");

                    b.ToTable("SectionHeads");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StaffMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmeContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmeContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nicno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RetiredDate")
                        .HasColumnType("date");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SchoolEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("TelHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StaffMembers");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudFID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactHome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nicno")
                        .IsRequired()
                        .HasColumnName("NICNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnName("StudID")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<string>("WorkingAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .HasName("IX_FK_StudentStudFamily");

                    b.ToTable("StudFamilies");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudSibling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SiblingStudentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiblingStudentId")
                        .HasName("IX_FK_StudentStudSibling1");

                    b.HasIndex("StudentId")
                        .HasName("IX_FK_StudentStudSibling");

                    b.ToTable("StudSiblings");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StudID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AdmittedClassId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .IsRequired()
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("EmergencyConName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InactiveReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndexNo")
                        .HasColumnType("int");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLeavingIssued")
                        .HasColumnType("bit");

                    b.Property<string>("LastGrade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnName("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SchoolEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudentExtraActivityAcheivement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcheivementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AwardedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcheivementId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentExtraActivityAcheivements");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudentExtraActivityPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentExtraActivityPositions");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsBasket")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImmeContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmeContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InactiveReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnName("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nicno")
                        .IsRequired()
                        .HasColumnName("NICNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SchoolEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TelHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "test",
                            ContactNo = "0714479648",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Piumali Manorika Suraweera",
                            Gender = 1,
                            ImmeContactName = "Malith",
                            ImmeContactNo = "0773411392",
                            Initials = "P M",
                            Lname = "Suraweera",
                            Nicno = "880272580V",
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 2,
                            Address = "test",
                            ContactNo = "0716669648",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Udara Rathnayaka",
                            Gender = 0,
                            ImmeContactName = "Umandya",
                            ImmeContactNo = "0773412392",
                            Initials = "U",
                            Lname = "Rathnayaka",
                            Nicno = "900272580V",
                            Status = 0,
                            Title = 5
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.TeacherSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StaffId")
                        .IsUnique()
                        .HasFilter("[StaffId] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "1",
                            Status = 1,
                            UserName = "rananga"
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId")
                        .HasName("IX_FK_RoleUserRole");

                    b.HasIndex("UserId")
                        .HasName("IX_FK_UserUserRole");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Class", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.GradeClass", "GradeClass")
                        .WithMany("Classes")
                        .HasForeignKey("GradeClassId")
                        .HasConstraintName("FK_GradeClass_Classes")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Teacher", null)
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassMonitor", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Class", "Class")
                        .WithMany("ClassMonitors")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_Class_ClassMonitors")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("ClassMonitors")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ClassMonitors")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassStudent", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("ClassStudents")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ClassStudent")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassStudentSubject", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.ClassStudent", "ClassStudent")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("ClassStudentId")
                        .HasConstraintName("FK_ClassStudent_StudentSubjects")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_StudentSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassSubject", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.TeacherSubject", "TeacherSubject")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("TeacherSubjectId")
                        .HasConstraintName("FK_TeacherSubject_ClassSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ClassTeacher", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Class", "Class")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("FK_Class_ClassTeachers")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.StaffMember", "StaffMember")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_StaffMember_ClassTeachers")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ExtraActivityAcheivement", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.ExtraActivity", "Activity")
                        .WithMany("Acheivements")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_Activity_Acheivements")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.ExtraActivityPosition", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.ExtraActivity", "Activity")
                        .WithMany("Positions")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_Activity_Positions")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Grade", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Teacher", null)
                        .WithMany("HeadingGrades")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.GradeClass", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Grade", "Grade")
                        .WithMany("GradeClasses")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Grade_GradeClasses")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.GradeHead", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId");

                    b.HasOne("Nalanda.SMS.Data.Models.StaffMember", "StaffMember")
                        .WithMany("HeadingGrades")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_StaffMember_HeadingGrades")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.LeavingCertificate", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("LeavingCertificates")
                        .HasForeignKey("StudId")
                        .HasConstraintName("FK_StudentLeavingCertificate")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Menu", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Menu", "ParentMenu")
                        .WithMany("InverseParentMenu")
                        .HasForeignKey("ParentMenuId")
                        .HasConstraintName("FK_MenuMenu");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.RoleMenuAccess", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Menu", "Menu")
                        .WithMany("RoleMenuAccesses")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_RoleMenuAccesses_Menus")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Role", "Role")
                        .WithMany("RoleMenuAccesses")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RoleMenuAccesses_Roles")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.SectionHead", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Section", "Section")
                        .WithMany("SectionHeads")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK_Section_SectionHeads")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.StaffMember", "StaffMember")
                        .WithMany()
                        .HasForeignKey("StaffMemberId");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudFamily", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("StudFamilies")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_StudentStudFamily")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudSibling", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Student", "SiblingStudent")
                        .WithMany("StudSiblings")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Stud_StudSibling")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudentExtraActivityAcheivement", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.ExtraActivityAcheivement", "Acheivement")
                        .WithMany("Students")
                        .HasForeignKey("AcheivementId")
                        .HasConstraintName("FK_Acheivement_Students")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("ActivityAcheivements")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ActivityAcheivements")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.StudentExtraActivityPosition", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.ExtraActivityPosition", "Position")
                        .WithMany("Students")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_Position_Students")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Student", "Student")
                        .WithMany("ActivityPositions")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ActivityPositions")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.Subject", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.TeacherSubject", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Grade", "Grade")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Grade_TeacherSubjects")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_TeacherSubjects")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Teacher_TeacherSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.User", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.StaffMember", "StaffMember")
                        .WithOne("User")
                        .HasForeignKey("Nalanda.SMS.Data.Models.User", "StaffId");
                });

            modelBuilder.Entity("Nalanda.SMS.Data.Models.UserRole", b =>
                {
                    b.HasOne("Nalanda.SMS.Data.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RoleUserRole")
                        .IsRequired();

                    b.HasOne("Nalanda.SMS.Data.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserUserRole")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
