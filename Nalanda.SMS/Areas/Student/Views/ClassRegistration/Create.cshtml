@model Nalanda.SMS.Areas.Student.Models.ClassStudentVM
@{
    ViewBag.Title = "Create Class Registration";
}
@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />

    <p>
        <input type="submit" value="Save" class="btn btn-primary" style="min-width:75px" />
    </p>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ClStudID)
    @Html.HiddenFor(model => model.PeriodFrom)

    <div class="form-group">
        @Html.Label("Admission No", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.PopUpSelectorFor(model => model.StudID, "Base", "Data", "GetStudents", new { @class = "form-control" }, "Please select a Student", dspFormat: "{1}", hiddenIndices: "0")
            @Html.ValidationMessageFor(model => model.StudID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.School, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.School, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.School, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PeriodID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.PopUpSelectorFor(model => model.PeriodID, "Base", "Data", "GetPeriods", new { @class = "form-control" }, "Please select a Period", dspFormat: "{1}", hiddenIndices: "0", dataParas: new { inReverseOn = true })
            @Html.ValidationMessageFor(model => model.PeriodID, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.PeriodTo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.PeriodTo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.PeriodTo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrClID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.PopUpSelectorFor(model => model.PrClID, "Base", "Data", "GetPromotClasses", new { @class = "form-control" }, "Please select a Class", dspFormat: "{1}", hiddenIndices: "0", dataParas: new { PeriodID = Model.PeriodID })
            @Html.ValidationMessageFor(model => model.PrClID, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/student/classregistration")
    
}

