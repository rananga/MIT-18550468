@model Nalanda.SMS.Areas.Admin.Models.StaffMemberVM

@{
    ViewBag.Title = "Edit Staff Member";
}


@using (Html.BeginForm())
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.RowVersion)
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <p>
            <input type="submit" value="Save" class="btn btn-primary" style="min-width:75px" />
        </p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="row justify-content-between">
            <div class="col-md-6">
                <div class="card" style="height: 100%; width:45%; border-radius:10px;border:0px;background:transparent; float:none;margin:auto;">
                    <div class="card-body center" style="text-align:center;">
                        @Html.ImageCaptor(Html.ActionUrl("GetPic", routeValues: new { id = Model.Id, @style = "height:100px;width:100px;" }), "Admin", "StaffMember", "UploadPicStr")
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group row">
                    @Html.RequiredLabelFor(model => model.StaffNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EnumEditorFor(model => model.StaffNumber, htmlAttributes: new { @class = "form-control form-control-sm rounded-pill form-select-sm" })
                        @Html.ValidationMessageFor(model => model.StaffNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.RequiredLabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EnumEditorFor(model => model.Title, htmlAttributes: new { @class = "form-control form-control-sm rounded-pill form-select-sm" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.RequiredLabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.RequiredLabelFor(model => model.Initials, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Initials, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Initials, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    @Html.RequiredLabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <br />
        <div class="form-group row">
            @Html.RequiredLabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumEditorFor(model => model.Gender, htmlAttributes: new { @class = "form-control form-control-sm rounded-pill" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.RequiredLabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
            @Html.RequiredLabelFor(model => model.ImmeContactName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ImmeContactName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImmeContactName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
            @Html.RequiredLabelFor(model => model.ImmeContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ImmeContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImmeContactNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.RequiredLabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
            @Html.RequiredLabelFor(model => model.Nicno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Nicno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nicno, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.RequiredLabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.SchoolEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.SchoolEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SchoolEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TelHome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.TelHome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelHome, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TeacherId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.TeacherId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumEditorFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.JoinedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.JoinedDate, new { htmlAttributes = new { @class = "form-control", type = "JQ-date" } })
                @Html.ValidationMessageFor(model => model.JoinedDate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.RetiredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumEditorFor(model => model.RetiredDate, htmlAttributes: new { @class = "form-control", type = "JQ-date" })
                @Html.ValidationMessageFor(model => model.RetiredDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/Admin/StaffMember.js")
}