// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentInformationSystem.Data;

namespace StudentInformationSystem.Data.Migrations
{
    [DbContext(typeof(dbNalandaContext))]
    [Migration("20230829180802_03")]
    partial class _03
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StudentInformationSystem.Data.Models.AuditTemp", b =>
                {
                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParticipantEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("UniqueQualifier")
                        .HasColumnType("bigint");

                    b.Property<string>("CalendarEventId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ConferenceId")
                        .HasColumnName("ConferenceID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsOutSide")
                        .HasColumnType("bit");

                    b.Property<string>("MeetingCode")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OrganizerEmail")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("MeetingDate", "CustomerId", "ParticipantEmail", "UniqueQualifier");

                    b.ToTable("AuditTemp");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ClassPromotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinalized")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotingCriteria")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("ClassPromotions");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ClassPromotionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("FromClassId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("ToClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromClassId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("StudentId");

                    b.HasIndex("ToClassId");

                    b.ToTable("ClassPromotionDetails");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ExtraActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExtraActivities");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ExtraActivityAcheivement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ExtraActivityAcheivements");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ExtraActivityIncharge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("StaffId");

                    b.ToTable("ExtraActivityIncharges");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ExtraActivityPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("HierarchyOrder")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ExtraActivityPositions");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeNo")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary Section Grade 1",
                            GradeNo = 1,
                            SectionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary Section Grade 2",
                            GradeNo = 2,
                            SectionId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary Section Grade 3",
                            GradeNo = 3,
                            SectionId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary Section Grade 4",
                            GradeNo = 4,
                            SectionId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary Section Grade 5",
                            GradeNo = 5,
                            SectionId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Junior Section Grade 6",
                            GradeNo = 6,
                            SectionId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Junior Section Grade 7",
                            GradeNo = 7,
                            SectionId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Junior Section Grade 8",
                            GradeNo = 8,
                            SectionId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Senior Section Grade 9",
                            GradeNo = 9,
                            SectionId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Senior Section Grade 10",
                            GradeNo = 10,
                            SectionId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Senior Section Grade 11",
                            GradeNo = 11,
                            SectionId = 3
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxStudentCount")
                        .HasColumnType("int");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("GradeClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1.A",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 1,
                            Medium = 0,
                            Name = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "1.B",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 1,
                            Medium = 0,
                            Name = 2
                        },
                        new
                        {
                            Id = 3,
                            Code = "1.C",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 1,
                            Medium = 0,
                            Name = 3
                        },
                        new
                        {
                            Id = 4,
                            Code = "1.D",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 1,
                            Medium = 0,
                            Name = 4
                        },
                        new
                        {
                            Id = 5,
                            Code = "9.A",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 1,
                            Name = 1
                        },
                        new
                        {
                            Id = 6,
                            Code = "9.B",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 1,
                            Name = 2
                        },
                        new
                        {
                            Id = 7,
                            Code = "9.C",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 0,
                            Name = 3
                        },
                        new
                        {
                            Id = 8,
                            Code = "9.D",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 0,
                            Name = 4
                        },
                        new
                        {
                            Id = 9,
                            Code = "9.E",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 0,
                            Name = 5
                        },
                        new
                        {
                            Id = 10,
                            Code = "9.F",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 0,
                            Name = 6
                        },
                        new
                        {
                            Id = 11,
                            Code = "9.G",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 0,
                            Name = 7
                        },
                        new
                        {
                            Id = 12,
                            Code = "9.H",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 0,
                            Name = 8
                        },
                        new
                        {
                            Id = 13,
                            Code = "9.I",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 9,
                            Medium = 0,
                            Name = 9
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeClassSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeClassId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeClassId");

                    b.HasIndex("SubjectId");

                    b.ToTable("GradeClassSubjects");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeEmail", b =>
                {
                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Year", "Grade");

                    b.ToTable("GradeEmails");

                    b.HasData(
                        new
                        {
                            Year = 2021,
                            Grade = 1,
                            EmailAddress = "grade1-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 2,
                            EmailAddress = "grade2-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 3,
                            EmailAddress = "grade3-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 4,
                            EmailAddress = "grade4-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 5,
                            EmailAddress = "grade5-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 6,
                            EmailAddress = "grade6-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 7,
                            EmailAddress = "grade7-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 8,
                            EmailAddress = "grade8-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 9,
                            EmailAddress = "grade9-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 10,
                            EmailAddress = "grade10-2021@nalandacollege.info"
                        },
                        new
                        {
                            Year = 2021,
                            Grade = 11,
                            EmailAddress = "grade11-2021@nalandacollege.info"
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("StaffId");

                    b.ToTable("GradeHeads");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("GradeSubjects");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.LeavingCertificate", b =>
                {
                    b.Property<int>("LeavCertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Conduct")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLeaving")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudId")
                        .HasColumnType("int");

                    b.HasKey("LeavCertId");

                    b.HasIndex("StudId")
                        .HasName("IX_FK_StudentLeavingCertificate");

                    b.ToTable("LeavingCertificates");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplaySeq")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentMenuId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.HasIndex("ParentMenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            DisplaySeq = 10,
                            Icon = "fas fa-user-tie",
                            IsHidden = false,
                            Text = "Admin",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 2,
                            DisplaySeq = 20,
                            Icon = "fas fa-book-reader",
                            IsHidden = false,
                            Text = "Academic",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 3,
                            DisplaySeq = 30,
                            Icon = "fas fa-chalkboard-teacher",
                            IsHidden = false,
                            Text = "Teacher",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 4,
                            DisplaySeq = 40,
                            Icon = "fas fa-user-graduate",
                            IsHidden = false,
                            Text = "Student",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 5,
                            DisplaySeq = 50,
                            Icon = "fas fa-laptop-code",
                            IsHidden = false,
                            Text = "Online",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 6,
                            DisplaySeq = 60,
                            Icon = "fas fa-chart-bar",
                            IsHidden = false,
                            Text = "Report",
                            Type = "M"
                        },
                        new
                        {
                            MenuId = 7,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Section",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Sections",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 8,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Grade",
                            DisplaySeq = 20,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Grades",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 9,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "StaffMember",
                            DisplaySeq = 30,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Staff Members",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 10,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Visitor",
                            DisplaySeq = 40,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Visitors",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 11,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "UserPermission",
                            DisplaySeq = 50,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "User Permissions",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 12,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "Users",
                            DisplaySeq = 60,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Users",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 13,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "SectionHead",
                            DisplaySeq = 70,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Section Heads",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 14,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "GradeHead",
                            DisplaySeq = 80,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Grade Heads",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 15,
                            Action = "Index",
                            Area = "Admin",
                            Controller = "ExtraActivity",
                            DisplaySeq = 90,
                            IsHidden = false,
                            ParentMenuId = 1,
                            Text = "Extra Activities",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 16,
                            Action = "Index",
                            Area = "Academic",
                            Controller = "SubjectCategory",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 2,
                            Text = "Subject Categories",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 17,
                            Action = "Index",
                            Area = "Academic",
                            Controller = "Subject",
                            DisplaySeq = 20,
                            IsHidden = false,
                            ParentMenuId = 2,
                            Text = "Subjects",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 18,
                            Action = "Index",
                            Area = "Academic",
                            Controller = "GradeSubject",
                            DisplaySeq = 30,
                            IsHidden = false,
                            ParentMenuId = 2,
                            Text = "Grade Subjects",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 19,
                            Action = "Index",
                            Area = "Academic",
                            Controller = "GradeClass",
                            DisplaySeq = 40,
                            IsHidden = false,
                            ParentMenuId = 2,
                            Text = "Grade Classes",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 20,
                            Action = "Index",
                            Area = "Academic",
                            Controller = "ClassRoom",
                            DisplaySeq = 50,
                            IsHidden = false,
                            ParentMenuId = 2,
                            Text = "Physical Classrooms",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 21,
                            Action = "Index",
                            Area = "Teacher",
                            Controller = "Teacher",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 3,
                            Text = "Teacher Subjects",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 22,
                            Action = "Index",
                            Area = "Teacher",
                            Controller = "TeacherQualification",
                            DisplaySeq = 20,
                            IsHidden = false,
                            ParentMenuId = 3,
                            Text = "Teacher Qualifications",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 23,
                            Action = "Index",
                            Area = "Teacher",
                            Controller = "TeacherOffTime",
                            DisplaySeq = 30,
                            IsHidden = false,
                            ParentMenuId = 3,
                            Text = "Teacher Off Times",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 24,
                            Action = "Index",
                            Area = "Student",
                            Controller = "Student",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 4,
                            Text = "Student Maintenance",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 25,
                            Action = "Index",
                            Area = "Student",
                            Controller = "BasketSubject",
                            DisplaySeq = 20,
                            IsHidden = false,
                            ParentMenuId = 4,
                            Text = "Student Basket Subjects",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 26,
                            Action = "Index",
                            Area = "Student",
                            Controller = "StudentAdmit",
                            DisplaySeq = 30,
                            IsHidden = false,
                            ParentMenuId = 4,
                            Text = "Admit Student",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 27,
                            Action = "Index",
                            Area = "Student",
                            Controller = "StudentMark",
                            DisplaySeq = 40,
                            IsHidden = false,
                            ParentMenuId = 4,
                            Text = "Student Marks",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 28,
                            Action = "Index",
                            Area = "Student",
                            Controller = "TransferStudent",
                            DisplaySeq = 50,
                            IsHidden = false,
                            ParentMenuId = 4,
                            Text = "Transfer Student",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 29,
                            Action = "Index",
                            Area = "Student",
                            Controller = "ClassPromotion",
                            DisplaySeq = 50,
                            IsHidden = false,
                            ParentMenuId = 4,
                            Text = "Class Promotion",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 30,
                            Action = "Index",
                            Area = "Student",
                            Controller = "StudentExtraActivities",
                            DisplaySeq = 60,
                            IsHidden = false,
                            ParentMenuId = 4,
                            Text = "Student Extra Activities",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 31,
                            Action = "Index",
                            Area = "Online",
                            Controller = "OnlineClassRoom",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 5,
                            Text = "Online Classrooms",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 32,
                            Action = "Index",
                            Area = "Online",
                            Controller = "OnlineTimeTable",
                            DisplaySeq = 20,
                            IsHidden = false,
                            ParentMenuId = 5,
                            Text = "Online Time Table",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 33,
                            Action = "Process",
                            Area = "Report",
                            Controller = "StudentCharacter",
                            DisplaySeq = 10,
                            IsHidden = false,
                            ParentMenuId = 6,
                            Text = "Student Character",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 34,
                            Action = "Process",
                            Area = "Report",
                            Controller = "StudentAttendance",
                            DisplaySeq = 20,
                            IsHidden = false,
                            ParentMenuId = 6,
                            Text = "Student Attendance",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 35,
                            Action = "Process",
                            Area = "Report",
                            Controller = "StudentMarks",
                            DisplaySeq = 30,
                            IsHidden = false,
                            ParentMenuId = 6,
                            Text = "Term Wise Student Marks",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 36,
                            Action = "Process",
                            Area = "Report",
                            Controller = "OnlineSessionsSummary",
                            DisplaySeq = 40,
                            IsHidden = false,
                            ParentMenuId = 6,
                            Text = "Online Sessions Summary",
                            Type = "I"
                        },
                        new
                        {
                            MenuId = 37,
                            Action = "Process",
                            Area = "Report",
                            Controller = "WeeklySummary",
                            DisplaySeq = 50,
                            IsHidden = false,
                            ParentMenuId = 6,
                            Text = "Weekly Summary",
                            Type = "I"
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OCR_ClassRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CR_Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OCR_Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CR_Id");

                    b.HasIndex("OCR_Id");

                    b.ToTable("OCR_ClassRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CR_Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OCR_Id = 1
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OCR_Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OCR_Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OCR_Id");

                    b.HasIndex("StaffId");

                    b.ToTable("OCR_Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsOwner = true,
                            OCR_Id = 1,
                            StaffId = 1
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OC_Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MeetingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OC_Id")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("OC_Id");

                    b.ToTable("OC_Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MeetingCode = "MYEWAPPSOO",
                            OC_Id = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MeetingCode = "ASQWCRTUFF",
                            OC_Id = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MeetingCode = "IGIPEICFEK",
                            OC_Id = 3
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OC_MeetingAttendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OC_MeetingId")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TimesVisited")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OC_MeetingId");

                    b.ToTable("OC_MeetingAttendees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 5110L,
                            OC_MeetingId = 1,
                            StudentId = 1,
                            TimesVisited = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 4879L,
                            OC_MeetingId = 2,
                            StudentId = 11,
                            TimesVisited = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duration = 4805L,
                            OC_MeetingId = 3,
                            StudentId = 21,
                            TimesVisited = 4
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OnlineClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalendarEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("FromTime")
                        .HasColumnType("time");

                    b.Property<string>("Lesson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OCR_Id")
                        .HasColumnType("int");

                    b.Property<int>("OCR_TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("RepeatPattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("ToTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("OCR_Id");

                    b.HasIndex("OCR_TeacherId");

                    b.ToTable("OnlineClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FromTime = new TimeSpan(0, 17, 0, 0, 0),
                            OCR_Id = 1,
                            OCR_TeacherId = 1,
                            ToTime = new TimeSpan(0, 18, 30, 0, 0)
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OnlineClassRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GoogleClassRoomId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleClassrommLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("OnlineClassRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeId = 1,
                            Medium = 0,
                            SubjectId = 1,
                            Year = 2021
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_Monitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CR_Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CR_Id");

                    b.HasIndex("StudentId");

                    b.ToTable("PCR_Monitors");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CR_Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RegisterNo")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CR_Id");

                    b.HasIndex("StudentId");

                    b.ToTable("PCR_Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 6,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 7,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 8,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 9,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 9
                        },
                        new
                        {
                            Id = 10,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 10
                        },
                        new
                        {
                            Id = 11,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 11
                        },
                        new
                        {
                            Id = 12,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 12
                        },
                        new
                        {
                            Id = 13,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 13
                        },
                        new
                        {
                            Id = 14,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 14
                        },
                        new
                        {
                            Id = 15,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 15
                        },
                        new
                        {
                            Id = 16,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 16
                        },
                        new
                        {
                            Id = 17,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 17
                        },
                        new
                        {
                            Id = 18,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 18
                        },
                        new
                        {
                            Id = 19,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 19
                        },
                        new
                        {
                            Id = 20,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 20
                        },
                        new
                        {
                            Id = 21,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 21
                        },
                        new
                        {
                            Id = 22,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 22
                        },
                        new
                        {
                            Id = 23,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 23
                        },
                        new
                        {
                            Id = 24,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 24
                        },
                        new
                        {
                            Id = 25,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 25
                        },
                        new
                        {
                            Id = 26,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 26
                        },
                        new
                        {
                            Id = 27,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 27
                        },
                        new
                        {
                            Id = 28,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 28
                        },
                        new
                        {
                            Id = 29,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 29
                        },
                        new
                        {
                            Id = 30,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 30
                        },
                        new
                        {
                            Id = 31,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 31
                        },
                        new
                        {
                            Id = 32,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 32
                        },
                        new
                        {
                            Id = 33,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 33
                        },
                        new
                        {
                            Id = 34,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 34
                        },
                        new
                        {
                            Id = 35,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 35
                        },
                        new
                        {
                            Id = 36,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 36
                        },
                        new
                        {
                            Id = 37,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 37
                        },
                        new
                        {
                            Id = 38,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 38
                        },
                        new
                        {
                            Id = 39,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 39
                        },
                        new
                        {
                            Id = 40,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 40
                        },
                        new
                        {
                            Id = 41,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 41
                        },
                        new
                        {
                            Id = 42,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 42
                        },
                        new
                        {
                            Id = 43,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 43
                        },
                        new
                        {
                            Id = 44,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 44
                        },
                        new
                        {
                            Id = 45,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 45
                        },
                        new
                        {
                            Id = 46,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 46
                        },
                        new
                        {
                            Id = 47,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 47
                        },
                        new
                        {
                            Id = 48,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 48
                        },
                        new
                        {
                            Id = 49,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 49
                        },
                        new
                        {
                            Id = 50,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 50
                        },
                        new
                        {
                            Id = 51,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 51
                        },
                        new
                        {
                            Id = 52,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 52
                        },
                        new
                        {
                            Id = 53,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 53
                        },
                        new
                        {
                            Id = 54,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 54
                        },
                        new
                        {
                            Id = 55,
                            CR_Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisterNo = 0,
                            StudentId = 55
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_StudentSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CR_StudentId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CR_StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("PCR_StudentSubjects");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_StudentSubjectMark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CR_StudentSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Marks")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CR_StudentSubjectId");

                    b.ToTable("PCR_StudentSubjectMarks");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CR_Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CR_Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("SubjectId");

                    b.ToTable("PCR_Subjects");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CR_Id")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("CR_Id");

                    b.HasIndex("StaffId");

                    b.ToTable("PCR_Teachers");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = 1,
                            Code = "Admin",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Administrator"
                        },
                        new
                        {
                            PermissionId = 2,
                            Code = "AdminUser",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin Department User"
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PermissionGradeAccess", b =>
                {
                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("GradeId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("PermissionGradeAccesses");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PermissionMenuAccess", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("PermissionMenuAccesses");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            PermissionId = 1
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PhysicalClassRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("GradeClassId")
                        .HasColumnType("int");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeClassId");

                    b.HasIndex("TeacherId");

                    b.ToTable("PhysicalClassRooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 1,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 2,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 3,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 4,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 5,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 6,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 7,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 8,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 9,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 10,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 11,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 12,
                            Medium = 0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeClassId = 13,
                            Medium = 0,
                            Year = 2021
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Primary",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Primary Section"
                        },
                        new
                        {
                            Id = 2,
                            Code = "Junior",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Junior Section"
                        },
                        new
                        {
                            Id = 3,
                            Code = "Senior",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Senior Section"
                        },
                        new
                        {
                            Id = 4,
                            Code = "AL-Science",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AL Science Section"
                        },
                        new
                        {
                            Id = 5,
                            Code = "AL-Art & Commerce",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AL Art & Commerce Section"
                        },
                        new
                        {
                            Id = 6,
                            Code = "AL-Technology",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AL Technology Section"
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.SectionHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("date");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("StaffId");

                    b.ToTable("SectionHeads");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StaffMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmeContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmeContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("date");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nicno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RetiredDate")
                        .HasColumnType("date");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SchoolEmail_Google")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolEmail_MS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffNumber")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("TelHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId")
                        .IsUnique()
                        .HasFilter("[TeacherId] IS NOT NULL");

                    b.ToTable("StaffMembers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Diana Sladen",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Diana",
                            LastName = "Sladen",
                            MobileNo = "0712345678",
                            Nicno = "888888001V",
                            SchoolEmail_Google = "dainas@nalandacollege.info",
                            StaffNumber = 101,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 2,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Ayomi Dilhani",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Ayomi",
                            LastName = "Dilhani",
                            MobileNo = "0712345678",
                            Nicno = "888888002V",
                            SchoolEmail_Google = "ayomik@nalandacollege.info",
                            StaffNumber = 102,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 3,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Apsara Vithan",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Apsara",
                            LastName = "Vithan",
                            MobileNo = "0712345678",
                            Nicno = "888888003V",
                            SchoolEmail_Google = "apsarae@nalandacollege.info",
                            StaffNumber = 103,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 4,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Malsha Mallawaarachchi",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Malsha",
                            LastName = "Mallawaarachchi",
                            MobileNo = "0712345678",
                            Nicno = "888888004V",
                            SchoolEmail_Google = "malsham@nalandacollege.info",
                            StaffNumber = 104,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 5,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Gammanpila Dayananda",
                            Gender = 0,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Gammanpila",
                            LastName = "Dayananda",
                            MobileNo = "0712345678",
                            Nicno = "888888005V",
                            SchoolEmail_Google = "dayanandag@nalandacollege.info",
                            StaffNumber = 105,
                            Status = 0,
                            Title = 4
                        },
                        new
                        {
                            Id = 6,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "D.S.Chethana",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "D.S.",
                            LastName = "Chethana",
                            MobileNo = "0712345678",
                            Nicno = "888888006V",
                            SchoolEmail_Google = "chethanac@nalandacollege.info",
                            StaffNumber = 106,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 7,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Himali Nanayakkara",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Himali",
                            LastName = "Nanayakkara",
                            MobileNo = "0712345678",
                            Nicno = "888888007V",
                            SchoolEmail_Google = "himalin@nalandacollege.info",
                            StaffNumber = 107,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 8,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Thilini Cooray",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Thilini",
                            LastName = "Cooray",
                            MobileNo = "0712345678",
                            Nicno = "888888008V",
                            SchoolEmail_Google = "thilinic@nalandacollege.info",
                            StaffNumber = 108,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 9,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Prabha Hiroshine",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Prabha",
                            LastName = "Hiroshine",
                            MobileNo = "0712345678",
                            Nicno = "888888009V",
                            SchoolEmail_Google = "prabhah@nalandacollege.info",
                            StaffNumber = 109,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 10,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Vijini Herath",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Vijini",
                            LastName = "Herath",
                            MobileNo = "0712345678",
                            Nicno = "888888010V",
                            SchoolEmail_Google = "vijinih@nalandacollege.info",
                            StaffNumber = 110,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 11,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "බැද්දේවෙල ධම්මකිත්ති හිමි",
                            Gender = 0,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "බැද්දේවෙල",
                            LastName = "ධම්මකිත්ති හිමි",
                            MobileNo = "0712345678",
                            Nicno = "888888011V",
                            SchoolEmail_Google = "bdhammakiththi@nalandacollege.info",
                            StaffNumber = 111,
                            Status = 0,
                            Title = 1
                        },
                        new
                        {
                            Id = 12,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Kalpa Udayappriya",
                            Gender = 0,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Kalpa",
                            LastName = "Udayappriya",
                            MobileNo = "0712345678",
                            Nicno = "888888012V",
                            SchoolEmail_Google = "kalpau@nalandacollege.info",
                            StaffNumber = 112,
                            Status = 0,
                            Title = 4
                        },
                        new
                        {
                            Id = 13,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Dilani Nilanga",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Dilani",
                            LastName = "Nilanga",
                            MobileNo = "0712345678",
                            Nicno = "888888013V",
                            SchoolEmail_Google = "dilinin@nalandacollege.info",
                            StaffNumber = 113,
                            Status = 0,
                            Title = 5
                        },
                        new
                        {
                            Id = 14,
                            Address1 = "TestEntry",
                            Address2 = "TestEntry",
                            City = "Colombo",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Dinithi Fernando",
                            Gender = 1,
                            ImmeContactName = "TestEntry",
                            ImmeContactNo = "0712345678",
                            Initials = "Dinithi",
                            LastName = "Fernando",
                            MobileNo = "0712345678",
                            Nicno = "888888014V",
                            SchoolEmail_Google = "dinithif@nalandacollege.info",
                            StaffNumber = 114,
                            Status = 0,
                            Title = 6
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AdmissionNo")
                        .HasColumnType("int");

                    b.Property<int?>("AdmittedClassId")
                        .HasColumnType("int");

                    b.Property<int?>("AdmittedGradeId")
                        .HasColumnType("int");

                    b.Property<string>("BC_BackImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BC_FrontImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirthDivSecretariat")
                        .HasColumnType("int");

                    b.Property<string>("BirthGramaDiv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BloodGroup")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentDivSecretariat")
                        .HasColumnType("int");

                    b.Property<string>("CurrentGramaDiv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("DriverDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("HomeLatitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HomeLongitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLeavingIssued")
                        .HasColumnType("bit");

                    b.Property<string>("KnownIllnesses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastClassId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LeavingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ParentsDeceasedStatus")
                        .HasColumnType("int");

                    b.Property<int>("ParentsMaritalStatus")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SchoolEmail_Google")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolEmail_MS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TransportMode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdmittedClassId");

                    b.HasIndex("AdmittedGradeId");

                    b.HasIndex("LastClassId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdmissionDate = new DateTime(2021, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25130,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Anuk Gunasekara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Anuk",
                            IsLeavingIssued = false,
                            LastName = "Gunasekara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25130@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 2,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24695,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "B.A.Inuka A. Abeysekara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "B.A.Inuka A.",
                            IsLeavingIssued = false,
                            LastName = "Abeysekara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24695@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 3,
                            AdmissionDate = new DateTime(2021, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24747,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "B.A.Thavidu T. Wimalasena",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "B.A.Thavidu T.",
                            IsLeavingIssued = false,
                            LastName = "Wimalasena",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24747@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 4,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25445,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Bihandu A.Bethmage",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Bihandu A.",
                            IsLeavingIssued = false,
                            LastName = "Bethmage",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25445@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 5,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24735,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Chanuka S.Wijerathna",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Chanuka S.",
                            IsLeavingIssued = false,
                            LastName = "Wijerathna",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24735@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 6,
                            AdmissionDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24701,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "D.T.K.Nethun Sanketh",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "D.T.K.Nethun",
                            IsLeavingIssued = false,
                            LastName = "Sanketh",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24701@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 7,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27403,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "D.W.Iran V.S.Wickramanayake",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "D.W.Iran V.S.",
                            IsLeavingIssued = false,
                            LastName = "Wickramanayake",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27403@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 8,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24750,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Dimath B Kahatapitiya",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Dimath B",
                            IsLeavingIssued = false,
                            LastName = "Kahatapitiya",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24750@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 9,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24706,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Dulain S. Jayawardhana",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Dulain S.",
                            IsLeavingIssued = false,
                            LastName = "Jayawardhana",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24706@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 10,
                            AdmissionDate = new DateTime(2021, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25145,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Dulina S.Gunathilake",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Dulina S.",
                            IsLeavingIssued = false,
                            LastName = "Gunathilake",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25145@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 11,
                            AdmissionDate = new DateTime(2021, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24785,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "G.Nuran C. Perera",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "G.Nuran C.",
                            IsLeavingIssued = false,
                            LastName = "Perera",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24785@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 12,
                            AdmissionDate = new DateTime(2021, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24685,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "G.A.D.Daham C. Siriwardane",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "G.A.D.Daham C.",
                            IsLeavingIssued = false,
                            LastName = "Siriwardane",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24685@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 13,
                            AdmissionDate = new DateTime(2021, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27390,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "G.P.Dimath Senhiru",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "G.P.Dimath",
                            IsLeavingIssued = false,
                            LastName = "Senhiru",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27390@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 14,
                            AdmissionDate = new DateTime(2021, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24786,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "G.V.Himasha R Peiris",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "G.V.Himasha R",
                            IsLeavingIssued = false,
                            LastName = "Peiris",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24786@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 15,
                            AdmissionDate = new DateTime(2021, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24712,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "H.A.Hirun S. Samaranayake",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "H.A.Hirun S.",
                            IsLeavingIssued = false,
                            LastName = "Samaranayake",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24712@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 16,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24758,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "H.A.Ositha J. Wijayarathna",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "H.A.Ositha J.",
                            IsLeavingIssued = false,
                            LastName = "Wijayarathna",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24758@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 17,
                            AdmissionDate = new DateTime(2021, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27326,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "H.M.Dinuka D.B.Rajaguru",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "H.M.Dinuka D.B.",
                            IsLeavingIssued = false,
                            LastName = "Rajaguru",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27326@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 18,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24972,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "H.M.Thimath S. Herath",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "H.M.Thimath S.",
                            IsLeavingIssued = false,
                            LastName = "Herath",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24972@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 19,
                            AdmissionDate = new DateTime(2021, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24687,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "I.A.Daniru Vinijith",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "I.A.Daniru",
                            IsLeavingIssued = false,
                            LastName = "Vinijith",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24687@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 20,
                            AdmissionDate = new DateTime(2021, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24717,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "J.K.Tharul M. Perera",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "J.K.Tharul M.",
                            IsLeavingIssued = false,
                            LastName = "Perera",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24717@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 21,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24749,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "J.M.M.Raadawa Jayasundara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "J.M.M.Raadawa",
                            IsLeavingIssued = false,
                            LastName = "Jayasundara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24749@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 22,
                            AdmissionDate = new DateTime(2021, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 28051,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "K.Dasindu Dulwan",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "K.Dasindu",
                            IsLeavingIssued = false,
                            LastName = "Dulwan",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "28051@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 23,
                            AdmissionDate = new DateTime(2021, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25425,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "K.Mithuru M. Perera",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "K.Mithuru M.",
                            IsLeavingIssued = false,
                            LastName = "Perera",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25425@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 24,
                            AdmissionDate = new DateTime(2021, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24755,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "K.S.Vikum M. Kariyawasam",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "K.S.Vikum M.",
                            IsLeavingIssued = false,
                            LastName = "Kariyawasam",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24755@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 25,
                            AdmissionDate = new DateTime(2021, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24781,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Kuvidu H.Amarasinghe",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Kuvidu H.",
                            IsLeavingIssued = false,
                            LastName = "Amarasinghe",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24781@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 26,
                            AdmissionDate = new DateTime(2021, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 29091,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "L.K.A.Y.Dissanayake",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "L.K.A.Y.",
                            IsLeavingIssued = false,
                            LastName = "Dissanayake",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "29091@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 27,
                            AdmissionDate = new DateTime(2021, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24680,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Luvya V.Seelanatha",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Luvya V.",
                            IsLeavingIssued = false,
                            LastName = "Seelanatha",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24680@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 28,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24746,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "M.A.Chathura P. Karunasekara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "M.A.Chathura P.",
                            IsLeavingIssued = false,
                            LastName = "Karunasekara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24746@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 29,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27289,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "M.D.Savith P. Binuditha",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "M.D.Savith P.",
                            IsLeavingIssued = false,
                            LastName = "Binuditha",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27289@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 30,
                            AdmissionDate = new DateTime(2021, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27287,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "M.G.Shashen R. Bandara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "M.G.Shashen R.",
                            IsLeavingIssued = false,
                            LastName = "Bandara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27287@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 31,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 28647,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Mihisara Kaveesha Hettiarachchi",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Mihisara Kaveesha",
                            IsLeavingIssued = false,
                            LastName = "Hettiarachchi",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "28647@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 32,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25039,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Minul Demith Peladagama",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Minul Demith",
                            IsLeavingIssued = false,
                            LastName = "Peladagama",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25039@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 33,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24779,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "P.M.G.Onitha O. Gunathilake",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "P.M.G.Onitha O.",
                            IsLeavingIssued = false,
                            LastName = "Gunathilake",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24779@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 34,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 28052,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "R.M.Thisath Dewwin Bandara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "R.M.Thisath Dewwin",
                            IsLeavingIssued = false,
                            LastName = "Bandara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "28052@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 35,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24812,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "R.G.Ravishka Sathsindu",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "R.G.Ravishka",
                            IsLeavingIssued = false,
                            LastName = "Sathsindu",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24812@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 36,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25640,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "R.M.Sashmitha N. B.Kotu",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "R.M.Sashmitha N. B.",
                            IsLeavingIssued = false,
                            LastName = "Kotu",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25640@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 37,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27364,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "S.M.Pavanindu N. Egodagedara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "S.M.Pavanindu N.",
                            IsLeavingIssued = false,
                            LastName = "Egodagedara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27364@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 38,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25032,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Sanuka N.Wanniarachchi",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Sanuka N.",
                            IsLeavingIssued = false,
                            LastName = "Wanniarachchi",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25032@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 39,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27385,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Sanuth I.E.Liyanage",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Sanuth I.",
                            IsLeavingIssued = false,
                            LastName = "E.Liyanage",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27385@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 40,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25656,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Seniru M.Weerasinghe",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Seniru",
                            IsLeavingIssued = false,
                            LastName = "M.Weerasinghe",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25656@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 41,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24775,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Senuja M.Gunasekara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Senuja M.",
                            IsLeavingIssued = false,
                            LastName = "Gunasekara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24775@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 42,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27327,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Sithum K.S.Rajapaksha",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Sithum K.S.",
                            IsLeavingIssued = false,
                            LastName = "Rajapaksha",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27327@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 43,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24757,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "T.Thulnith I. Vithana",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "T.Thulnith I.",
                            IsLeavingIssued = false,
                            LastName = "Vithana",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24757@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 44,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27396,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "T.N.Hansaka Walpola",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "T.N.Hansaka",
                            IsLeavingIssued = false,
                            LastName = "Walpola",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27396@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 45,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24718,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Tharul B. Dharmasena",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Tharul B.",
                            IsLeavingIssued = false,
                            LastName = "Dharmasena",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24718@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 46,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24710,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Tharusha V.Kalubowila",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Tharusha V.",
                            IsLeavingIssued = false,
                            LastName = "Kalubowila",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24710@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 47,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24770,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "The min S. Wijayawardana",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "The min S.",
                            IsLeavingIssued = false,
                            LastName = "Wijayawardana",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24770@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 48,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27347,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "W.Sachintha Akalanka",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "W.Sachintha",
                            IsLeavingIssued = false,
                            LastName = "Akalanka",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27347@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 49,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24790,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "W.A.Dinushka R Perera",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "W.A.Dinushka R",
                            IsLeavingIssued = false,
                            LastName = "Perera",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24790@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 50,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24754,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "W.A.H.Nethru Weerasooriya",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "W.A.H.Nethru",
                            IsLeavingIssued = false,
                            LastName = "Weerasooriya",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24754@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 51,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27483,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "W.A.Nushan Wijeweera",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "W.A.Nushan",
                            IsLeavingIssued = false,
                            LastName = "Wijeweera",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27483@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 52,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 27482,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "W.F.Tenura T. Perera",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "W.F.Tenura T.",
                            IsLeavingIssued = false,
                            LastName = "Perera",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "27482@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 53,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 25430,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "W.M.A.Rivinaka Eragoda",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "W.M.A.Rivinaka",
                            IsLeavingIssued = false,
                            LastName = "Eragoda",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "25430@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 54,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 28054,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Yonal B. Galagedara",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Yonal B.",
                            IsLeavingIssued = false,
                            LastName = "Galagedara",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "28054@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        },
                        new
                        {
                            Id = 55,
                            AdmissionDate = new DateTime(2021, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdmissionNo = 24714,
                            BirthDivSecretariat = 0,
                            BloodGroup = 0,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentDivSecretariat = 0,
                            FullName = "Yumeth M.Dewapura",
                            HomeLatitude = 0m,
                            HomeLongitude = 0m,
                            Initials = "Yumeth M.",
                            IsLeavingIssued = false,
                            LastName = "Dewapura",
                            Medium = 1,
                            ParentsDeceasedStatus = 0,
                            ParentsMaritalStatus = 0,
                            SchoolEmail_Google = "24714@nalandacollege.info",
                            Status = 0,
                            TransportMode = 0
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentBasketSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentBasketSubjects");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentExtraActivityAcheivement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcheivementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AwardedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcheivementId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentExtraActivityAcheivements");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentExtraActivityPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentExtraActivityPositions");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactHome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmergencyContact")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NIC_BackImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIC_FrontImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nicno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.Property<string>("WorkingAdd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentFamilies");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentSibling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SiblingStudentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSiblings");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("FromCR_Id")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("ToCR_Id")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromCR_Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("ToCR_Id");

                    b.ToTable("StudentTransfers");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("SubjectCategoryId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "බුද්ධධර්මය",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "සිංහල",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Code = "English",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "Mathematics",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = "Science",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 1
                        },
                        new
                        {
                            Id = 6,
                            Code = "History",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 1
                        },
                        new
                        {
                            Id = 7,
                            Code = "Tamil",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 2
                        },
                        new
                        {
                            Id = 8,
                            Code = "Geography",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 2
                        },
                        new
                        {
                            Id = 9,
                            Code = "Civic Education",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 2
                        },
                        new
                        {
                            Id = 10,
                            Code = "Eastern Music",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 3
                        },
                        new
                        {
                            Id = 11,
                            Code = "Drama",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 3
                        },
                        new
                        {
                            Id = 12,
                            Code = "Western Music",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 3
                        },
                        new
                        {
                            Id = 13,
                            Code = "PTS",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 4
                        },
                        new
                        {
                            Id = 14,
                            Code = "Health",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 4
                        },
                        new
                        {
                            Id = 15,
                            Code = "ICT",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Medium = 0,
                            SectionId = 3,
                            SubjectCategoryId = 4
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.SubjectCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBasket")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("SubjectCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Main",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBasket = false
                        },
                        new
                        {
                            Id = 2,
                            Code = "Basket 1",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBasket = true
                        },
                        new
                        {
                            Id = 3,
                            Code = "Basket 2",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBasket = true
                        },
                        new
                        {
                            Id = 4,
                            Code = "Basket 3",
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsBasket = true
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.SyncLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Sevierity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SyncLogs");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.SyncQueue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("QueuedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("SyncType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SyncQueue");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.TeacherOffTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherOffTimes");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.TeacherPreferedSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherPreferedSubjects");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.TeacherQualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AwardedYear")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Institute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("QualificationType")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherQualifications");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.TeacherQualificationSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherQualificationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherQualificationId");

                    b.ToTable("TeacherQualificationSubjects");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VisitorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StaffId")
                        .IsUnique()
                        .HasFilter("[StaffId] IS NOT NULL");

                    b.HasIndex("VisitorId")
                        .IsUnique()
                        .HasFilter("[VisitorId] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "1",
                            Status = 1,
                            UserName = "rananga",
                            VisitorId = 1
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.UserPermission", b =>
                {
                    b.Property<int>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserPermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions");

                    b.HasData(
                        new
                        {
                            UserPermissionId = 1,
                            PermissionId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nicno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SchoolEmail_Google")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolEmail_MS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Visitors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "System",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Rananga Lakshitha Suraweera",
                            Gender = 0,
                            Initials = "R L",
                            LastName = "Suraweera",
                            MobileNo = "0713522384",
                            Nicno = "860272580V",
                            SchoolEmail_Google = "rananga@nalandacollege.info",
                            Title = 4
                        });
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ClassPromotion", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Grade", "Grade")
                        .WithMany("ClassPromotions")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Grade_ClassPromotions")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ClassPromotionDetail", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "FromClass")
                        .WithMany("FromClassPromotionDetails")
                        .HasForeignKey("FromClassId")
                        .HasConstraintName("FK_FromClass_FromClassPromotionDetails")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.ClassPromotion", "ClassPromotion")
                        .WithMany("ClassPromotionDetails")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_ClassPromotion_PromotionDetails")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("ClassPromotionDetails")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ClassPromotionDetails")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "ToClass")
                        .WithMany("ToClassPromotionDetails")
                        .HasForeignKey("ToClassId")
                        .HasConstraintName("FK_ToClass_ToClassPromotionDetails");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ExtraActivityAcheivement", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.ExtraActivity", "Activity")
                        .WithMany("Acheivements")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_Activity_Acheivements")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ExtraActivityIncharge", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.ExtraActivity", "Activity")
                        .WithMany("Incharges")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_Activity_Incharges")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.StaffMember", "StaffMember")
                        .WithMany("ExtraActivityIncharges")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_StaffMember_ExtraActivityIncharges")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.ExtraActivityPosition", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.ExtraActivity", "Activity")
                        .WithMany("Positions")
                        .HasForeignKey("ActivityId")
                        .HasConstraintName("FK_Activity_Positions")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Grade", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Section", "Section")
                        .WithMany("Grades")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK_Section_Grades")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Teacher", null)
                        .WithMany("HeadingGrades")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeClass", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Grade", "Grade")
                        .WithMany("GradeClasses")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Grade_GradeClasses")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeClassSubject", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.GradeClass", "GradeClass")
                        .WithMany("GradeClassSubjects")
                        .HasForeignKey("GradeClassId")
                        .HasConstraintName("FK_GradeClass_GradeClassSubjects")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Subject", "Subject")
                        .WithMany("GradeClassSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_GradeClassSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeHead", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Grade", "Grade")
                        .WithMany("GradeHeads")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Grade_GradeHeads")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.StaffMember", "StaffMember")
                        .WithMany("HeadingGrades")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_StaffMember_HeadingGrades")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.GradeSubject", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Grade", "Grade")
                        .WithMany("GradeSubjects")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Grade_GradeSubjects")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Subject", "Subject")
                        .WithMany("GradeSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_GradeSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.LeavingCertificate", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("LeavingCertificates")
                        .HasForeignKey("StudId")
                        .HasConstraintName("FK_StudentLeavingCertificate")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Menu", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Menu", "ParentMenu")
                        .WithMany("InverseParentMenu")
                        .HasForeignKey("ParentMenuId")
                        .HasConstraintName("FK_MenuMenu");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OCR_ClassRoom", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "PhysicalClassRoom")
                        .WithMany("OCR_ClassRooms")
                        .HasForeignKey("CR_Id")
                        .HasConstraintName("FK_ClassRoom_OCR_ClassRooms")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.OnlineClassRoom", "OnlineClassRoom")
                        .WithMany("PhysicalClassRooms")
                        .HasForeignKey("OCR_Id")
                        .HasConstraintName("FK_OnlineClassRoom_OCR_ClassRooms")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OCR_Teacher", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.OnlineClassRoom", "OnlineClassRoom")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("OCR_Id")
                        .HasConstraintName("FK_OnlineClassRoom_ClassTeachers")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.StaffMember", "StaffMember")
                        .WithMany("OCR_Teachers")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_ClassTeacher_OCR_Teachers")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OC_Meeting", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.OnlineClass", "OnlineClass")
                        .WithMany("OC_Meetings")
                        .HasForeignKey("OC_Id")
                        .HasConstraintName("FK_OnlineClass_OC_Meetings")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OC_MeetingAttendee", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.OC_Meeting", "OC_Meeting")
                        .WithMany("OC_MeetingAttendees")
                        .HasForeignKey("OC_MeetingId")
                        .HasConstraintName("FK_OC_Meeting_OC_MeetingAttendees")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OnlineClass", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.OnlineClassRoom", "OnlineClassRoom")
                        .WithMany("OnlineClasses")
                        .HasForeignKey("OCR_Id")
                        .HasConstraintName("FK_OnlineClassRoom_OnlineClasses")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.OCR_Teacher", "OCR_Teacher")
                        .WithMany("OnlineClasses")
                        .HasForeignKey("OCR_TeacherId")
                        .HasConstraintName("FK_OCR_Teacher_OnlineClasses")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.OnlineClassRoom", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Grade", "Grade")
                        .WithMany("OnlineClassRooms")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Grade_OnlineClassRooms")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Subject", "Subject")
                        .WithMany("OnlineClassRooms")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_OnlineClassRooms")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_Monitor", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "PhysicalClassRoom")
                        .WithMany("ClassMonitors")
                        .HasForeignKey("CR_Id")
                        .HasConstraintName("FK_Class_ClassMonitors")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("ClassMonitors")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ClassMonitors")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_Student", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "PhysicalClassRoom")
                        .WithMany("ClassStudents")
                        .HasForeignKey("CR_Id")
                        .HasConstraintName("FK_Class_ClassStudents")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("ClassStudents")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ClassStudents")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_StudentSubject", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PCR_Student", "CR_Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("CR_StudentId")
                        .HasConstraintName("FK_ClassStudent_StudentSubjects")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_StudentSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_StudentSubjectMark", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PCR_StudentSubject", "CR_StudentSubject")
                        .WithMany("ClassStudentSubjectMarks")
                        .HasForeignKey("CR_StudentSubjectId")
                        .HasConstraintName("FK_ClassStudentSubject_ClassStudentSubjectMarks")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_Subject", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "PhysicalClassRoom")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("CR_Id")
                        .HasConstraintName("FK_Class_ClassSubjects")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.StaffMember", "StaffMember")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_StaffMember_ClassSubjects");

                    b.HasOne("StudentInformationSystem.Data.Models.Subject", "Subject")
                        .WithMany("ClassSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_ClassSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PCR_Teacher", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "PhysicalClassRoom")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("CR_Id")
                        .HasConstraintName("FK_Class_ClassTeachers")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.StaffMember", "StaffMember")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_StaffMember_ClassTeachers")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PermissionGradeAccess", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Grade", "Grade")
                        .WithMany("PermissionGradeAccesses")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_Grade_PermissionGradeAccesses")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Permission", "Permission")
                        .WithMany("PermissionGradeAccesses")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK_Permission_PermissionGradeAccesses")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PermissionMenuAccess", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Menu", "Menu")
                        .WithMany("PermissionMenuAccesses")
                        .HasForeignKey("MenuId")
                        .HasConstraintName("FK_Menu_PermissionMenuAccesses")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Permission", "Permission")
                        .WithMany("PermissionMenuAccesses")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK_Permission_PermissionMenuAccesses")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.PhysicalClassRoom", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.GradeClass", "GradeClass")
                        .WithMany("Classes")
                        .HasForeignKey("GradeClassId")
                        .HasConstraintName("FK_GradeClass_Classes")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Teacher", null)
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.SectionHead", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Section", "Section")
                        .WithMany("SectionHeads")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK_Section_SectionHeads")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.StaffMember", "StaffMember")
                        .WithMany("HeadingSections")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK_StaffMember_HeadingSections")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StaffMember", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Teacher", "Teacher")
                        .WithOne("StaffMember")
                        .HasForeignKey("StudentInformationSystem.Data.Models.StaffMember", "TeacherId");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Student", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "AdmittedClass")
                        .WithMany("AdmittedClassStudents")
                        .HasForeignKey("AdmittedClassId")
                        .HasConstraintName("FK_AdmittedClass_AdmittedClassStudents");

                    b.HasOne("StudentInformationSystem.Data.Models.Grade", "AdmittedGrade")
                        .WithMany("GradeAdmissions")
                        .HasForeignKey("AdmittedGradeId")
                        .HasConstraintName("FK_AdmittedGrade_GradeAdmissions");

                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "LastClass")
                        .WithMany("LastClassStudents")
                        .HasForeignKey("LastClassId")
                        .HasConstraintName("FK_LastClass_LastClassStudents");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentBasketSubject", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("StudentBasketSubjects")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_StudentBasketSubjects")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Subject", "Subject")
                        .WithMany("StudentBasketSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_StudentBasketSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentExtraActivityAcheivement", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.ExtraActivityAcheivement", "Acheivement")
                        .WithMany("Students")
                        .HasForeignKey("AcheivementId")
                        .HasConstraintName("FK_Acheivement_Students")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("ActivityAcheivements")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ActivityAcheivements")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentExtraActivityPosition", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.ExtraActivityPosition", "Position")
                        .WithMany("Students")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_Position_Students")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("ActivityPositions")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_ActivityPositions")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentFamily", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("StudentFamilies")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_StudentStudFamily")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentSibling", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Student", "SiblingStudent")
                        .WithMany("StudentSiblings")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Stud_StudSibling")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.StudentTransfer", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "FromClass")
                        .WithMany("FromTransfers")
                        .HasForeignKey("FromCR_Id")
                        .HasConstraintName("FK_FromClass_FromTransfers")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Student", "Student")
                        .WithMany("StudentTransfers")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Student_StudentTransfers")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.PhysicalClassRoom", "ToClass")
                        .WithMany("ToTransfers")
                        .HasForeignKey("ToCR_Id")
                        .HasConstraintName("FK_ToClass_ToTransfers")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Subject", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.SubjectCategory", "SubjectCategory")
                        .WithMany("Subjects")
                        .HasForeignKey("SubjectCategoryId")
                        .HasConstraintName("FK_SubjectCategory_Subjects")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.Teacher", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Section", "Section")
                        .WithMany("Teachers")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK_Section_Teachers")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.TeacherOffTime", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Teacher", "Teacher")
                        .WithMany("TeacherOffTimes")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Teacher_OffTimes")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.TeacherPreferedSubject", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Subject", "Subject")
                        .WithMany("TeacherPreferedSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_TeacherPreferedSubjects")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.Teacher", "Teacher")
                        .WithMany("TeacherPreferedSubjects")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Teacher_TeacherPreferedSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.TeacherQualification", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Teacher", "Teacher")
                        .WithMany("TeacherQualifications")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK_Teacher_TeacherQualifications")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.TeacherQualificationSubject", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Subject", "Subject")
                        .WithMany("TeacherQualificationSubjects")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Subject_TeacherQualificationSubjects")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.TeacherQualification", "TeacherQualification")
                        .WithMany("TeacherQualificationSubjects")
                        .HasForeignKey("TeacherQualificationId")
                        .HasConstraintName("FK_TeacherQualification_TeacherQualificationSubjects")
                        .IsRequired();
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.User", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.StaffMember", "StaffMember")
                        .WithOne("User")
                        .HasForeignKey("StudentInformationSystem.Data.Models.User", "StaffId");

                    b.HasOne("StudentInformationSystem.Data.Models.Visitor", "Visitor")
                        .WithOne("User")
                        .HasForeignKey("StudentInformationSystem.Data.Models.User", "VisitorId");
                });

            modelBuilder.Entity("StudentInformationSystem.Data.Models.UserPermission", b =>
                {
                    b.HasOne("StudentInformationSystem.Data.Models.Permission", "Permission")
                        .WithMany("UserPermissions")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK_Permission_UserPermissions")
                        .IsRequired();

                    b.HasOne("StudentInformationSystem.Data.Models.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_UserPermissions")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
